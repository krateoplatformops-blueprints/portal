apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: compositions-panels
  namespace: {{ .Release.Namespace }}
  annotations:
    "krateo.io/verbose": "true"
spec:
  api:
  - name: namespaces
    path: "/api/v1/namespaces"
    filter: "[.namespaces.items[] | .metadata.name]"
  - name: compositionspanels
    dependsOn: 
      name: namespaces
      iterator: .namespaces
    path: ${ "/apis/widgets.templates.krateo.io/v1beta1/namespaces/" + (.) + "/panels" }
    continueOnError: true
  filter: >
    {
      compositionspanels: (
        (if (.compositionspanels | type) == "array" then
          [.compositionspanels[]?.items[]? | select((.metadata.labels // {})["krateo.io/portal-page"] == "compositions")]
        elif (.compositionspanels | type) == "object" then
          [.compositionspanels.items[]?    | select((.metadata.labels // {})["krateo.io/portal-page"] == "compositions")]
        else
          []
        end) as $items
        | (._slice_.offset  // 0)                 as $offset
        | (._slice_.perPage // ($items | length)) as $perPage
        | [
            $items
            | length as $len
            | range($offset; $offset + $perPage)
            | select(. < $len)         # avoid out-of-bounds
            | $items[.]
          ]
      )
    }
